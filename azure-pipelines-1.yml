trigger:
 branches:
  include:
    - "*"
  exclude:
    - main

variables:
  buildConfiguration: "Test"
  webRepository: "capstonefinal"
  tag: "$(Build.BuildId)"

stages:
  - stage: "Test"
    displayName: "Testing"
    jobs:
      - job: "Test"
        displayName: "Test Job"
        pool:
          vmImage: "ubuntu-20.04"
        steps:
          - task: CmdLine@2
            displayName: hadolint
            inputs:
              script: "cat $(Build.SourcesDirectory)/Dockerfile | docker run --rm -i -v $(Build.SourcesDirectory)/hadolint.yaml:/.config/hadolint.yaml hadolint/hadolint > $(Build.ArtifactStagingDirectory)/output.txt && cat $(Build.SourcesDirectory)/Dockerfile | docker run --rm -i -v $(Build.SourcesDirectory)/hadolint.yaml:/.config/hadolint.yaml hadolint/hadolint"
              workingDirectory: "$(Build.SourcesDirectory)"
            continueOnError: true
            
          - task: WhiteSource@21
            inputs:
              projectName: 'CapstoneFinal'
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifactName: hadolintOutput

      - job: "Test_Python"
        displayName: "Test Python"
        pool:
         vmImage: "ubuntu-latest"
        steps:                   
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.6'
          - script: |
              pip install --upgrade bandit
              bandit -r $(Build.SourcesDirectory)/app.py -f json | tee $(Build.ArtifactStagingDirectory)/bandit-output.json
            displayName: "Bandit Test"
          - script: |
              python -m pip install flake8
              flake8 .
            displayName: 'Run Flake8 Test'
            failOnStderr: false
      - job:
        pool:
         vmImage: 'ubuntu-latest'
        strategy:
          matrix:
            Python27:
              python.version: '2.7'
            Python35:
              python.version: '3.5'
            Python36:
              python.version: '3.6'
            Python37:
              python.version: '3.7'
        steps:
        - task: UsePythonVersion@0
          displayName: 'Use Python $(python.version)'
          inputs:
            versionSpec: '$(python.version)'
        - script: pip install tox
          displayName: 'Install Tox'
        - script: tox -e py
          displayName: 'Run Tox'

          # - task: PublishPipelineArtifact@1
          #   inputs:
          #     targetPath: $(Build.ArtifactStagingDirectory)
          #     artifactName: pythonoutput
          # - task: PythonScript@0
          #   inputs:
          #     scriptSource: inline
          #     script: |
              #  python -m pip install --upgrade pip
              #  python -m pip install bandit
              #  bandit -r $(Build.SourcesDirectory)/app.py -f json | tee $(Build.ArtifactStagingDirectory)/bandit-output.json
              
