trigger:
 branches:
   include:
     - main
 paths:
  exclude:
  - README.md
    

pr: none


variables:
  buildConfiguration: "Release"
  webRepository: "capstonefinal"
  tag: "$(Build.BuildId)"

stages:
  - stage: "Test"
    displayName: "Testing"
    jobs:
      - job: "Test"
        displayName: "Test Job"
        pool:
          vmImage: "ubuntu-20.04"
        steps:
          - task: CmdLine@2
            displayName: hadolint
            inputs:
              script: "cat $(Build.SourcesDirectory)/Dockerfile | docker run --rm -i -v $(Build.SourcesDirectory)/hadolint.yaml:/.config/hadolint.yaml hadolint/hadolint > $(Build.ArtifactStagingDirectory)/output.txt && cat $(Build.SourcesDirectory)/Dockerfile | docker run --rm -i -v $(Build.SourcesDirectory)/hadolint.yaml:/.config/hadolint.yaml hadolint/hadolint"
              workingDirectory: "$(Build.SourcesDirectory)"
            continueOnError: true
          - task: WhiteSource@21
            inputs:
              projectName: 'CapstoneFinal'
      - job: "Test_Python"
        displayName: "Test Python"
        pool:
         vmImage: "ubuntu-latest"
        steps:                   
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.6'
          - script: |
              pip install --upgrade bandit
              bandit -r $(Build.SourcesDirectory)/app.py -f json | tee $(Build.ArtifactStagingDirectory)/bandit-output.json
            displayName: "Bandit Test"
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifactName: Output
          
  - stage: "Build"
    displayName: "Build and push"
    dependsOn: Test
    jobs:
      - job: "Build"
        displayName: "Build job"
        pool:
          vmImage: "ubuntu-20.04"
        steps:
          - task: Docker@2
            displayName: "Build and push the image to container registry"
            inputs:
              command: buildAndPush
              buildContext: $(Build.Repository.LocalPath)
              repository: thylaw/$(webRepository)
              dockerfile: "$(Build.SourcesDirectory)/Dockerfile"
              containerRegistry: "DockerHub Registry Connection"
              tags: |
                $(tag)

  - stage: "Deploy"
    jobs:
    - deployment: "Pull_Container"
      displayName: "Deploy_to_Staging"
      pool:
       vmImage: "ubuntu-20.04"
      variables:
        - group: Release
      environment: "Staging"
      strategy:
       runOnce:
         deploy:
           steps:
            - download: none
            - task: AzureWebAppContainer@1
              inputs:
               appName: $(WebAppNameStaging)
               azureSubscription: "Resource Manager Capstone Final"
               imageName: docker.io/thylaw/capstonefinal:$(build.buildId)



# trying something out
  # - stage: "Deploy"
  #   displayName: "Deploy the container"
  #   dependsOn: Build
  #   jobs:
  #     - job: "Deploy"
  #       displayName: "Deploy job"
  #       pool:
  #         vmImage: "ubuntu-20.04"
        # variables:
        #   - group: Release
  #       steps:
  #         - task: AzureWebAppContainer@1
  #           inputs:
  #             appName: $(WebAppName)
  #             azureSubscription: "Resource Manager Capstone Final"
  #             imageName: docker.io/thylaw/capstonefinal:$(build.buildId)

